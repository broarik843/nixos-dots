# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ inputs, config, lib, pkgs, modulesPath, ... }:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix")
  #"${builtins.fetchGit { url = "https://github.com/NixOS/nixos-hardware.git"; }}/lenovo/thinkpad/t14/amd/gen1"
];

  systemd = {
    targets.network-online.wantedBy = pkgs.lib.mkForce [];
    services = {
      NetworkManager-wait-online.wantedBy = pkgs.lib.mkForce []; 
      NetworkManager-wait-online.enable = false;
      systemd-udev-settle.enable = false;

      "getty@tty1".enable = false;
      "autovt@tty1".enable = false;
    };
  };

  # False hardware support Pulseaudio
  hardware.pulseaudio.enable = false;   
  
  hardware.graphics = {
    
      enable = true;
      enable32Bit = true;
          };
  hardware.graphics.extraPackages = with pkgs; [
    rocmPackages.clr.icd
  ];
  # Bootloader.
  boot = {
    kernelPackages = pkgs.linuxPackages_zen; 
  loader = {
  systemd-boot.enable = false;
    efi = {
       canTouchEfiVariables = true;
       efiSysMountPoint = "/boot";
     };
     grub = { 
       enable = true;
       device = "nodev";
       efiSupport = true;
       #splashImage = /e;
     };
     timeout = 5;
    };
  initrd.availableKernelModules = ["nvme" "ehci_pci" "xhci_pci" "usb_storage" "sd_mod" "rtsx_pci_sdmmc" ];
  initrd.kernelModules = [ ];
  kernelModules = [ "kvm-amd" "amdgpu" "v4l2loopback" ];
  extraModulePackages = [ pkgs.linuxPackages_zen.v4l2loopback ];
  extraModuleConfig = [ч];
  }; 



  fileSystems."/" =
    { device = "/dev/disk/by-uuid/ee297ca4-cc3d-4050-a1fd-51c9ca3521fb";
      fsType = "btrfs";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/AB81-4E39";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };


  swapDevices = [ {
    device = "/var/lib/swapfile";
    size = 6096;
  } ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp1s0f0u4.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp6s0.useDHCP = lib.mkDefault true;

  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}

